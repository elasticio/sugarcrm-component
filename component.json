{
    "title": "SugarCRM 7",
    "description": "SugarCRM REST API",
    "docsUrl": "https://github.com/elasticio/sugarcrm-component",
    "credentials": {
        "fields":{
            "baseUrl": {
                "label": "Your SugarCRM domain",
                "required": true,
                "viewClass": "TextFieldView"
            },
            "userName": {
                "label": "Your login",
                "required": true,
                "viewClass": "TextFieldView"
            },
            "password": {
                "label": "Your password",
                "required": true,
                "viewClass": "PasswordFieldView"
            },
            "clientID": {
                "label": "Your OAuth 2.0 Consumer Key",
                "required": true,
                "viewClass": "TextFieldView"
            },
            "clientSecret" : {
                "label": "Your OAuth 2.0 Consumer Secret",
                "required" : true,
                "viewClass": "PasswordFieldView"
            }
        }
    },
    "triggers": {
        "executeQueryTrigger": {
            "title": "Plain SugarCRM query",
            "main": "./lib/triggers/query.js",
            "type": "polling",
            "metadata": {
                "out": {}
            },
            "fields": {
                "query": {
                    "label": "Query",
                    "required": true,
                    "viewClass": "TextAreaWithNoteView",
                    "placeholder": "{\n  \"filter\":[\n    {\"name\":\"Nelson Inc\"}\n  ]\n}",
                    "note": "Complete list of query params you can get <a href='http://support.sugarcrm.com/Documentation/Sugar_Developer/Sugar_Developer_Guide_7.7/Integration/Web_Services/v10/Endpoints/modulefilter_POST/' target='_blank'>here</a>"

                },
                "module": {
                    "label": "Module",
                    "required": true,
                    "viewClass": "TextFieldView"
                }
            }
        },
        "getEntitiesPolling": {
            "main": "./lib/triggers/getEntitiesPolling.js",
            "type": "polling",
            "title": "Fetch new and updated objects (getEntities - Polling)",
            "description": "Get SugarCRM objects which have recently been modified or created",
            "fields" : {
                "module" : {
                    "label": "SugarCRM module to fetch",
                    "required": true,
                    "viewClass": "SelectView",
                    "model": "modules",
                    "prompt": "Select a SugarCRM module"
                },
                "maxNum": {
                    "label": "Number of records to fetch",
                    "viewClass": "TextFieldView",
                    "prompt": "20",
                    "note": "Defaults to 20"
                }
            },
            "metadata": {
                "out": {}
            }
        }
    },
    "actions": {
        "executeQueryAction": {
            "title": "Plain SugarCRM query",
            "main": "./lib/triggers/query.js",
            "metadata": {
                "out": {},
                "in": {
                     "type": "object",
                     "properties": {
                         "query": {
                             "maxLength": 20000,
                             "title": "Query",
                             "type": "string",
                             "required": true
                         },
                         "module": {
                             "maxLength": 100,
                             "title": "Module",
                             "type": "string",
                             "required": true
                         }
                     }
                }
            }
        },
        "createEntry" :{
            "main": "./lib/actions/createEntry.js",
            "title": "Create a new entry",
            "description": "Create a new entry",
            "dynamicMetadata": true,
            "fields" : {
                "module" : {
                    "label": "SugarCRM module to create",
                    "required": true,
                    "viewClass": "SelectView",
                    "model": "modules",
                    "prompt": "Select a SugarCRM module"
                }
            }
        },
        "updateEntry" :{
            "main": "./lib/actions/updateEntry.js",
            "title": "Update an existing entry",
            "description": "Update an existing entry",
            "dynamicMetadata": true,
            "fields" : {
                "module" : {
                    "label": "SugarCRM module to update",
                    "required": true,
                    "viewClass": "SelectView",
                    "model": "modules",
                    "prompt": "Select a SugarCRM module"
                },
                "externalIdProperty" : {
                    "viewClass":"TextFieldView",
                    "label":"Property to match",
                    "required":true,
                    "note": "This is the property to match.  This component will find a single object which has this value and update it.",
                    "placeholder": ""
                }
            }
        },
        "upsertEntry" :{
            "main": "./lib/actions/upsertEntry.js",
            "title": "Upsert Entry",
            "description": "Update an existing entry if it exists or otherwise create it",
            "dynamicMetadata": true,
            "fields" : {
                "module" : {
                    "label": "SugarCRM module to update",
                    "required": true,
                    "viewClass": "SelectView",
                    "model": "modules",
                    "prompt": "Select a SugarCRM module"
                },
                "externalIdProperty" : {
                    "viewClass":"TextFieldView",
                    "label":"Property to match",
                    "required":true,
                    "note": "This is the property to match.  This component will find a single object which has this value and update it.  If this object does not exist, we will create it.",
                    "placeholder": ""
                }
            }
        }
    }
}
